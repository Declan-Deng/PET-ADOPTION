import { PlusOutlined } from '@ant-design/icons';
import { PageContainer, ProTable } from '@ant-design/pro-components';
import { Button, message, Modal } from 'antd';
import { useRef } from 'react';
import { history } from '@umijs/max';
import { getPets, deletePet } from '@/services/ant-design-pro/api';
import type { ActionType, ProColumns } from '@ant-design/pro-components';
import type { API } from '@/services/ant-design-pro/typings';

const PetList: React.FC = () => {
  const actionRef = useRef<ActionType>();

  const columns: ProColumns<API.Pet>[] = [
    {
      title: '宠物名称',
      dataIndex: 'name',
    },
    {
      title: '品种',
      dataIndex: 'breed',
    },
    {
      title: '年龄',
      dataIndex: 'age',
      valueType: 'digit',
    },
    {
      title: '状态',
      dataIndex: 'status',
      valueEnum: {
        available: { text: '可领养', status: 'Success' },
        pending: { text: '审核中', status: 'Processing' },
        adopted: { text: '已领养', status: 'Default' },
      },
    },
    {
      title: '创建时间',
      dataIndex: 'createdAt',
      valueType: 'dateTime',
      hideInSearch: true,
    },
    {
      title: '操作',
      valueType: 'option',
      render: (_, record) => [
        <Button
          key="edit"
          type="link"
          onClick={() => {
            history.push(`/pets/edit/${record.id}`);
          }}
        >
          编辑
        </Button>,
        <Button
          key="delete"
          type="link"
          danger
          onClick={() => {
            Modal.confirm({
              title: '确认删除',
              content: '确定要删除这只宠物吗？',
              onOk: async () => {
                try {
                  await deletePet(record.id);
                  message.success('删除成功');
                  actionRef.current?.reload();
                } catch (error) {
                  message.error('删除失败');
                }
              },
            });
          }}
        >
          删除
        </Button>,
      ],
    },
  ];

  return (
    <PageContainer>
      <ProTable<API.Pet>
        headerTitle="宠物列表"
        actionRef={actionRef}
        rowKey="id"
        search={{
          labelWidth: 120,
        }}
        toolBarRender={() => [
          <Button
            key="add"
            type="primary"
            onClick={() => {
              history.push('/pets/add');
            }}
          >
            <PlusOutlined /> 添加宠物
          </Button>,
        ]}
        request={async (params) => {
          const response = await getPets({
            current: params.current,
            pageSize: params.pageSize,
            status: params.status,
          });
          return {
            data: response.data,
            success: true,
            total: response.total,
          };
        }}
        columns={columns}
      />
    </PageContainer>
  );
};

export default PetList; 